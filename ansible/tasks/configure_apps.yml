# ansible/tasks/configure_apps.yml - Application configuration automation
---
- name: Wait for Dockge to be fully ready
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:5001"
    method: GET
  register: dockge_ready
  until: dockge_ready.status == 200
  retries: 30
  delay: 10

- name: Wait for services to be healthy before configuration
  pause:
    seconds: 60
    prompt: "Waiting for application containers to fully initialize..."

- name: Check application readiness
  block:
    - name: Wait for Prowlarr to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:9696/api/v1/system/status"
        method: GET
      register: prowlarr_ready
      until: prowlarr_ready.status == 200
      retries: 30
      delay: 10
      when: config.stacks is defined and 'media' in config.stacks

    - name: Wait for Sonarr to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8989/api/v3/system/status"
        method: GET
        headers:
          X-Api-Key: "dummy"
      register: sonarr_ready
      until: sonarr_ready.status == 200 or sonarr_ready.status == 401
      retries: 30
      delay: 10
      when: config.stacks is defined and 'media' in config.stacks

    - name: Wait for Radarr to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:7878/api/v3/system/status"
        method: GET
        headers:
          X-Api-Key: "dummy"
      register: radarr_ready
      until: radarr_ready.status == 200 or radarr_ready.status == 401
      retries: 30
      delay: 10
      when: config.stacks is defined and 'media' in config.stacks

    - name: Wait for Jellyfin to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8096/health"
        method: GET
      register: jellyfin_ready
      until: jellyfin_ready.status == 200
      retries: 30
      delay: 10
      when: config.stacks is defined and 'media' in config.stacks

- name: Configure Jellyfin initial setup
  block:
    - name: Check if Jellyfin is already configured
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8096/Startup/Configuration"
        method: GET
      register: jellyfin_config_check
      failed_when: false

    - name: Get Jellyfin startup info
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8096/Startup/FirstUser"
        method: GET
      register: jellyfin_startup
      when: jellyfin_config_check.status == 200

    - name: Create initial Jellyfin user
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8096/Startup/User"
        method: POST
        body_format: json
        body:
          Name: "{{ config.username }}"
          Password: "{{ config.jellyfin_password | default('homelab123') }}"
      when: 
        - jellyfin_config_check.status == 200
        - jellyfin_startup.status == 200
      ignore_errors: yes

    - name: Complete Jellyfin startup
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8096/Startup/Complete"
        method: POST
      when: 
        - jellyfin_config_check.status == 200
        - jellyfin_startup.status == 200
      ignore_errors: yes

  when: config.stacks is defined and 'media' in config.stacks

- name: Display application access information
  debug:
    msg: |
      🎉 Applications configured and ready!
      
      {% if config.stacks is defined and 'media' in config.stacks %}
      Media Stack Applications:
      ┌─────────────────────────────────────────────────────────────┐
      │ Jellyfin (Media Server):   http://{{ ansible_default_ipv4.address }}:8096      │
      │ Sonarr (TV Shows):         http://{{ ansible_default_ipv4.address }}:8989      │
      │ Radarr (Movies):           http://{{ ansible_default_ipv4.address }}:7878      │
      │ Prowlarr (Indexers):       http://{{ ansible_default_ipv4.address }}:9696      │
      │ Deluge (Downloads):        http://{{ ansible_default_ipv4.address }}:8112      │
      │ Jellyseerr (Requests):     http://{{ ansible_default_ipv4.address }}:5055      │
      │ Bazarr (Subtitles):        http://{{ ansible_default_ipv4.address }}:6767      │
      │ FileBot (Organization):    http://{{ ansible_default_ipv4.address }}:5800      │
      └─────────────────────────────────────────────────────────────┘
      {% endif %}
      
      {% if config.stacks is defined and 'audio' in config.stacks %}
      Audio Stack Applications:
      ┌─────────────────────────────────────────────────────────────┐
      │ AudioBookshelf:            http://{{ ansible_default_ipv4.address }}:13378     │
      │ Lidarr (Music):            http://{{ ansible_default_ipv4.address }}:8686      │
      │ Navidrome (Music Player):  http://{{ ansible_default_ipv4.address }}:4533      │
      └─────────────────────────────────────────────────────────────┘
      {% endif %}
      
      {% if config.stacks is defined and 'books' in config.stacks %}
      Book Stack Applications:
      ┌─────────────────────────────────────────────────────────────┐
      │ Readarr (Books):           http://{{ ansible_default_ipv4.address }}:8787      │
      │ Mylar3 (Comics):           http://{{ ansible_default_ipv4.address }}:8090      │
      │ Calibre (Library):         http://{{ ansible_default_ipv4.address }}:8080      │
      │ Calibre-Web (Web Reader):  http://{{ ansible_default_ipv4.address }}:8083      │
      └─────────────────────────────────────────────────────────────┘
      {% endif %}
      
      Management:
      ┌─────────────────────────────────────────────────────────────┐
      │ Dockge (Stack Manager):    http://{{ ansible_default_ipv4.address }}:5001      │
      └─────────────────────────────────────────────────────────────┘
      
      Configuration Summary:
      ✓ Media path: {{ storage_path }}/media
      ✓ Downloads: {{ storage_path }}/media/downloads
      ✓ ZFS snapshots: {{ 'enabled (daily)' if zfs_pool_created | default(false) else 'disabled' }}
      ✓ SAMBA shares: {{ 'enabled' if config.smb_enabled | default(false) else 'disabled' }}
      
      Default Credentials:
      • Jellyfin: {{ config.username }} / {{ config.jellyfin_password | default('homelab123') }}
      • Calibre: homelab / {{ config.calibre_password | default('homelab123') }}
      • SAMBA: {{ config.smb_username | default('homelab') }} / {{ config.smb_password | default('homelab123') }}
      
      Next Steps:
      1. Visit Dockge to start additional stacks or manage existing ones
      2. Configure Prowlarr indexers first (required for automation)
      3. Connect *arr apps to Prowlarr and Deluge in their settings
      4. Add media libraries in Jellyfin pointing to {{ storage_path }}/media/
      5. Set up request permissions in Jellyseerr
      
      Enjoy your automated homelab! 🚀